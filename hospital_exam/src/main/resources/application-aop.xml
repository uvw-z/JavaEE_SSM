<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>


<!--    <context:component-scan base-package="com.cqust"/>
    <bean id="doctorServiceA" class="com.cqust.service.impl.DoctorServiceImpl"></bean>-->
    <bean name="doctorDaoA" class="com.cqust.aop.DoctorDaoImpl"/>
    <bean name="xmlAdvice" class="com.cqust.aop.XmlAdvice"/>  <!--增强方法所在的类-->


    <!--配置Spring AOP-->
    <aop:config>
        <!--指定切入点UserDaoImpl-->
        <aop:pointcut id="pointcut" expression="execution(* com.cqust.aop.DoctorDaoImpl.*(..))"/>
        <!--指定切面-->
        <aop:aspect ref="xmlAdvice">
            <aop:before method="before" pointcut-ref="pointcut"/>
            <aop:after-returning method="afterReturing" pointcut-ref="pointcut"/>
            <aop:around method="around" pointcut-ref="pointcut"/>
            <aop:after-throwing method="afterException" pointcut-ref="pointcut"/>
            <aop:after method="after" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

<!--
    &lt;!&ndash;引入属性文件&ndash;&gt;
    <context:property-placeholder location="classpath:db.properties"/>
    &lt;!&ndash;数据源&ndash;&gt;
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>-->


<!--    &lt;!&ndash;1.事务管理器，依赖于数据源&ndash;&gt;
    &lt;!&ndash; similarly, don't forget the TransactionManager &ndash;&gt;
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    &lt;!&ndash;2.编写通知，对事物进行增强（通知），需要编写切入点和具体执行事务的细节&ndash;&gt;
    &lt;!&ndash; the transactional advice (what 'happens'; see the <aop:advisor/> bean below) &ndash;&gt;
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"
                       isolation="DEFAULT" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    &lt;!&ndash;3.编写aop，让Spring自动为目标生成代理，需要使用AspectJ的表达式&ndash;&gt;
    &lt;!&ndash; ensure that the above transactional advice runs for any execution
         of an operation defined by the FooService interface &ndash;&gt;
    <aop:config>
        <aop:pointcut id="fooServiceOperation" expression="execution(* com.cqust.service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
    </aop:config>

    &lt;!&ndash;注解的方式：注册事务管理器驱动&ndash;&gt;
    <tx:annotation-driven transaction-manager="txManager"/>-->
</beans>